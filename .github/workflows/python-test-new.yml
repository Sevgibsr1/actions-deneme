name: Python Test Workflow (GeniÅŸletilmiÅŸ)

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Kodu al
        uses: actions/checkout@v3

      - name: Python ortamÄ±nÄ± kur
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: BaÄŸÄ±mlÄ±lÄ±klarÄ± yÃ¼kle
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8

      - name: Lint kontrolÃ¼ (flake8)
        run: |
          echo "ğŸ§¹ Kod kalitesi kontrolÃ¼ baÅŸlatÄ±lÄ±yor..."
          # HatalarÄ± gÃ¶ster, ama buildâ€™i durdurma
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Testleri Ã§alÄ±ÅŸtÄ±r ve coverage raporu oluÅŸtur
        run: |
          echo "ğŸš€ Testler baÅŸlatÄ±lÄ±yor..."
          pytest --cov=. --cov-report=term-missing --cov-report=xml

      - name: Coverage raporunu yÃ¼kle (Artifact)
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Bildirim gÃ¶nder (E-posta ve Slack)
        if: always()
        run: |
          echo "ğŸ“¬ Testler tamamlandÄ±, bildirim gÃ¶nderiliyor..."

          # ---- SLACK ----
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"âœ… *Testler tamamlandÄ±!* Lint ve coverage raporu baÅŸarÄ±yla oluÅŸturuldu."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

          # ---- E-POSTA ----
          python - <<EOF
          import smtplib
          from email.mime.text import MIMEText

          msg = MIMEText("âœ… Testler tamamlandÄ±!\nğŸ“Š Coverage raporu oluÅŸturuldu.\nğŸ§¹ Lint kontrolÃ¼ baÅŸarÄ±yla bitti.")
          msg["Subject"] = "âœ… Test SonuÃ§larÄ± - Lint & Coverage BaÅŸarÄ±lÄ±"
          msg["From"] = "${{ secrets.EMAIL_USER }}"
          msg["To"] = "${{ secrets.EMAIL_USER }}"

          with smtplib.SMTP("${{ secrets.EMAIL_HOST }}", int("${{ secrets.EMAIL_PORT }}")) as server:
              server.starttls()
              server.login("${{ secrets.EMAIL_USER }}", "${{ secrets.EMAIL_PASS }}")
              server.send_message(msg)
          EOF
