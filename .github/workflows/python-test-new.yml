name: Full Python CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Kodları al
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Python ortamını kur
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3️⃣ Bağımlılıkları yükle
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "requirements.txt bulunamadı"
          pip install pytest pytest-cov flake8

      # 4️⃣ Kod kalitesi (Linting)
      - name: Run linting
        run: |
          echo "🧹 Kod kalitesi kontrol ediliyor..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # 5️⃣ Unit testler
      - name: Run unit tests
        run: |
          echo "🧪 Unit testler çalıştırılıyor..."
          pytest -v --maxfail=1 --disable-warnings --cov=.

      # 6️⃣ Integration testler
      - name: Run integration tests
        run: |
          echo "🔗 Integration testler başlatılıyor..."
          pytest tests/integration || echo "⚠️ Integration test dosyası yok"

      # 7️⃣ Docker image build
      - name: Build Docker image
        run: |
          echo "🐳 Docker image oluşturuluyor..."
          docker build -t myapp:latest .

      # 8️⃣ Docker image push (örnek için simülasyon)
      - name: Push Docker image (Simulated)
        run: |
          echo "📤 Docker image push ediliyor (örnek simülasyon)..."
          echo "docker push myregistry/myapp:latest"

      # 9️⃣ Deploy aşaması (örnek)
      - name: Deploy to environment (Simulated)
        run: |
          echo "🚀 Deploy işlemi başlatıldı (örnek)..."
          sleep 2
          echo "✅ Deploy tamamlandı."

      # 🔟 Smoke test
      - name: Smoke test after deploy
        run: |
          echo "🔥 Smoke test çalıştırılıyor..."
          curl -Is http://localhost:8000 || echo "⚠️ Uygulama erişilemedi, sadece örnek test"

      # 🔔 Bildirim
      - name: Notify via Slack and Email
        if: always()
        run: |
          echo "📬 Bildirimler gönderiliyor...."
